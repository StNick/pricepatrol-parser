name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm run test:run
      
    - name: Build package
      run: npm run build

  publish-npm:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build
      
    - name: Verify package contents
      run: |
        echo "Package contents:"
        npm pack --dry-run
        
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-github-release:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build
      
    - name: Create package archive
      run: |
        npm pack
        PACKAGE_FILE=$(ls stnickza-pricepatrol-parser-*.tgz | head -n1)
        if [ "$PACKAGE_FILE" != "stnickza-pricepatrol-parser-${{ steps.version.outputs.VERSION }}.tgz" ]; then
          mv "$PACKAGE_FILE" "stnickza-pricepatrol-parser-${{ steps.version.outputs.VERSION }}.tgz"
        fi
        
    - name: Generate changelog
      id: changelog
      run: |
        # Extract changelog for this version
        if [ -f CHANGELOG.md ]; then
          awk '/^## \['"${{ steps.version.outputs.VERSION }}"'\]/{flag=1; next} /^## \[/{flag=0} flag' CHANGELOG.md > release_notes.md
        else
          echo "Release ${{ steps.version.outputs.VERSION }}" > release_notes.md
          echo "" >> release_notes.md
          echo "Changes:" >> release_notes.md
          git log --oneline --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> release_notes.md || echo "- Initial release" >> release_notes.md
        fi
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ steps.version.outputs.VERSION }}
        body_path: release_notes.md
        files: |
          stnickza-pricepatrol-parser-${{ steps.version.outputs.VERSION }}.tgz
          dist/*.js
          dist/*.d.ts
        draft: false
        prerelease: ${{ contains(steps.version.outputs.VERSION, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}